// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI crop recommendation agent.
 *
 * - aiCropRecommendation - A function that handles the crop recommendation process.
 * - AICropRecommendationInput - The input type for the aiCropRecommendation function.
 * - AICropRecommendationOutput - The return type for the aiCropRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AICropRecommendationInputSchema = z.object({
  soilAnalysis: z.string().optional().describe('The analysis of the soil on the farm.'),
  soilHealthCardImage: z
    .string()
    .optional()
    .describe(
      "A photo of the soil health card, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'. The AI will extract soil analysis from this."
    ),
  realTimeWeatherConditions: z
    .string()
    .describe('The real time weather conditions on the farm.'),
  seasonalData: z.string().describe('The seasonal data for the farm.'),
});
export type AICropRecommendationInput = z.infer<typeof AICropRecommendationInputSchema>;

const AICropRecommendationOutputSchema = z.object({
  optimalCrops: z.string().describe('The optimal crops for planting.'),
  reasoning: z.string().describe('The reasoning behind the recommendation.'),
});
export type AICropRecommendationOutput = z.infer<typeof AICropRecommendationOutputSchema>;

export async function aiCropRecommendation(
  input: AICropRecommendationInput
): Promise<AICropRecommendationOutput> {
  return aiCropRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'aiCropRecommendationPrompt',
  input: {schema: AICropRecommendationInputSchema},
  output: {schema: AICropRecommendationOutputSchema},
  prompt: `You are an expert agricultural advisor. You will analyze the farm\'s soil analysis, real-time weather conditions, and seasonal data to suggest the most optimal crops for planting.

{{#if soilHealthCardImage}}
You have been provided an image of a soil health report. Extract the soil analysis details from this image.
Soil Health Report Image: {{media url=soilHealthCardImage}}
{{else}}
Use the provided soil analysis text.
Soil Analysis: {{{soilAnalysis}}}
{{/if}}

Real-time Weather Conditions: {{{realTimeWeatherConditions}}}
Seasonal Data: {{{seasonalData}}}

Based on this information, what are the optimal crops for planting, and what is the reasoning behind this recommendation?`,
});

const aiCropRecommendationFlow = ai.defineFlow(
  {
    name: 'aiCropRecommendationFlow',
    inputSchema: AICropRecommendationInputSchema,
    outputSchema: AICropRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
